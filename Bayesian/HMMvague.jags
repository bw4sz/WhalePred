
    model {
    pi <- 3.141592653589
    Omega[1,1] <- 1
    Omega[1,2] <- 0
    Omega[2,1] <- 0
    Omega[2,2] <- 1
    
    ## model block with priors, state process model, and observation model
    ## ----------------------- Prior distributions -----------------------
    ## state process var-covar matrix, Sigma
    iSigma[1:2,1:2] ~ dwish(Omega[,], 2)
    Sigma[1:2,1:2] <- inverse(iSigma[,])
    ## mean turn angle: theta[1] (transient), theta[2] (ARS)
    # prior for theta in 'foraging state'
    theta[1] ~ dunif(-1*pi,pi)
    
    # prior for theta in 'traveling state'
    theta[2] ~ dunif(-1*pi,pi)
    
    ## move persistence: gamma[1] (transient), gamma[2] (ARS)
    gamma[1] ~ dbeta(1, 1)
    gamma[2] ~ dbeta(1, 1)

    ## behavioural state switching probabilities: alpha ``matrix''
    alpha[1] ~ dbeta(1, 1)
    alpha[2] ~ dbeta(1, 1)

    ## probabilities of initial behavioural state (transient or ARS)
    lambda[1] ~ dbeta(1, 1)
    lambda[2] <- 1 - lambda[1]

    ## -----------------------------------------------------------------
    ## ---------------------- State Process Model ----------------------
    ## randomly specify initial behavioural state, b[1]
    b[1] ~ dcat(lambda[])

    ## randomly specify location of second state, y[2,1:2]
    y[2,1:2] ~ dmnorm(y[1,], iSigma[,])
    
    ## Loop over the 2 to steps-1 time steps
    for(t in 2:(steps-1)){
    ## randomly specify the time t behavioural state, b[t]
    phi[t,1] <- alpha[b[t-1]]
    phi[t,2] <- 1 - alpha[b[t-1]]
    b[t] ~ dcat(phi[t,])
    
    ## randomly specify the time t+1 location state, y[t+1,1:2]
    y.mn[t,1] <- y[t,1] + (cos(theta[b[t]]) * (y[t,1] - y[t-1,1]) -
    sin(theta[b[t]]) * (y[t,2] - y[t-1,2])) * gamma[b[t]]
    y.mn[t,2] <- y[t,2] + (sin(theta[b[t]]) * (y[t,1] - y[t-1,1]) +
    cos(theta[b[t]]) * (y[t,2] - y[t-1,2])) * gamma[b[t]]
    y[t+1,1:2] ~ dmnorm(y.mn[t,], iSigma[,])
    }
    ## randomly specify the last behavioural state, b[steps]
    zeta[1] <- alpha[b[steps-1]]
    zeta[2] <- 1 - zeta[1]
    b[steps] ~ dcat(zeta[])
    }
    
