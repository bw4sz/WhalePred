
    model{
    
    #Constants
    pi <- 3.141592653589
    
    for(i in 1:ind){

    ###First Step###
    #First movement - random walk.
    y[i,2,1:2] ~ dmnorm(y[i,1,1:2],iSigma)
    
    ###First Behavioral State###
    state[i,1] ~ dcat(lambda[]) ## assign state for first obs
    
    #Process Model for movement
    for(t in 2:(steps-1)){
    
    #Behavioral State at time T
    logit(phi[i,t,1]) <- lalpha[state[i,t-1]] + lbeta[state[i,t-1]] * ocean[i,t]
    phi[i,t,2] <- 1-phi[i,t,1]
    state[i,t] ~ dcat(phi[i,t,])
        
    #Turning covariate
    #Transition Matrix for turning angles
    T[i,t,1,1] <- cos(theta[state[i,t]])
    T[i,t,1,2] <- (-sin(theta[state[i,t]]))
    T[i,t,2,1] <- sin(theta[state[i,t]])
    T[i,t,2,2] <- cos(theta[state[i,t]])
    
    #Correlation in movement change
    d[i,t,1:2] <- y[i,t,] + gamma[state[i,t]] * T[i,t,,] %*% (y[i,t,1:2] - y[i,t-1,1:2])
    
    #Gaussian Displacement
    y[i,t+1,1:2] ~ dmnorm(d[i,t,1:2],iSigma)
    }
    #Final behavior state
    logit(phi[i,steps,1]) <- lalpha[state[i,steps-1]] + lbeta[state[i,steps-1]] * ocean[i,steps]
    phi[i,steps,2] <- 1-phi[i,steps,1]
    state[i,steps] ~ dcat(phi[i,steps,])
    }
    
    #Priors
    #Process Variance
    iSigma ~ dwish(R,2)
    Sigma <- inverse(iSigma)
    
    ##Mean Angle
    tmp[1] ~ dbeta(10, 10)
    tmp[2] ~ dbeta(10, 10)
    
    # prior for theta in 'traveling state'
    theta[1] <- (2 * tmp[1] - 1) * pi
    
    # prior for theta in 'foraging state'    
    theta[2] <- (tmp[2] * pi * 2)
    
    ##Move persistance
    # prior for gamma (autocorrelation parameter) in state 1
    gamma[1] ~ dbeta(5,2)
    
    # prior for gamma in state 2
    gamma[2] ~ dbeta(2,5)
    
    ##Behavioral States
    # Following lunn 2012 p85
    
    # prob of being in state 1 at t, given in state 1 at t-1    
    lalpha[1] ~ dnorm(0,0.386)
    logit(alpha[1]) <- lalpha[1]
    
    lbeta[1] ~ dnorm(0,0.386)
    logit(beta[1]) <- lbeta[1]

    #Prob of transition to state 1 given state 2 at t-1
    lalpha[2] ~ dnorm(0,0.386)
    logit(alpha[2]) <- lalpha[2]
    
    lbeta[2] ~ dnorm(0,0.386)
    logit(beta[2]) <- lbeta[2]
    
    #Probability of behavior switching 
    lambda[1] ~ dbeta(1,1)
    lambda[2] <- 1 - lambda[1]
    
    }
