```
##Chains
```{r,fig.height=12,eval=T}
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
sv<-merge(sv,mindex,by="MonthF",sort=F)
pc<-data.frame(x,sv)
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=2) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
```
```{r,eval=F}
#write.csv
#write.csv(pc,"OutData/pars.csv")
pc<-read.csv("OutData/pars.csv")
pc$Behavior<-as.factor(pc$Behavior)
```
```{r,fig.width=11}
#Plot
ggplot(data=pc[!pc$parameter %in% c("phi","state"),],aes(x=value)) + geom_histogram() + facet_wrap(~par,scales='free',ncol=4) + theme_bw()  + ggtitle("Estimated parameters")
```
###Compare to priors
```{r}
#add comparison to priors
todraw<-table(pc$par)[1]
pc$Estimate<-"Posterior"
#add priors
#alpha
a1prior<-data.frame(Draw=1:todraw,par='alpha[1]',value=rnorm(todraw,0,1.67),parameter='alpha_mu',Behavior=1,Estimate="Prior")
a2prior<-data.frame(Draw=1:todraw,par='alpha[2]',value=rnorm(todraw,0,1.67),parameter='alpha_mu',Behavior=2,Estimate="Prior")
beta1prior<-data.frame(Draw=1:todraw,par='beta[1]',value=rnorm(todraw,0,1.67),parameter='beta_mu',Behavior=1,Estimate="Prior")
beta21prior<-data.frame(Draw=1:todraw,par='beta2[1]',value=rnorm(todraw,0,1.67),parameter='beta2_mu',Behavior=1,Estimate="Prior")
gamma1prior<-data.frame(Draw=1:todraw,par='gamma[1]',value=rbeta(todraw,1,10),parameter='gamma',Behavior=1,Estimate="Prior")
gamma2prior<-data.frame(Draw=1:todraw,par='gamma[2]',value=rbeta(todraw,1.5,5),parameter='gamma',Behavior=2,Estimate="Prior")
prs<-rbind_all(list(a1prior,a2prior,beta1prior,beta21prior,gamma1prior,gamma2prior))
prs$Behavior<-as.factor(prs$Behavior)
allp<-rbind_all(list(pc[!pc$parameter %in% c("phi","state"),],prs))
ggplot(allp,aes(x=Behavior,y=value,fill=Estimate)) + geom_violin() + facet_wrap(~parameter,scale="free")
rm(allp)
```
## Parameter Summary
```{r}
psum<-pc %>% filter(!parameter %in% c("phi","state")) %>% group_by(parameter,par) %>% summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
ggplot(psum,aes(x=par,y=mean,ymax=upper,ymin=lower)) + geom_linerange() + geom_point() + facet_wrap(~parameter,scales="free")
```
#Behavior and environment
##Hierarchical
### Ocean Depth
```{r}
#get the posterior estimates of the env function
postplot<-pc %>% filter(parameter %in% c('beta_mu','alpha_mu')) %>% dcast(.,Draw+chain~par) %>% group_by(Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_mu[1]',.$'beta_mu[2]'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
ggplot(postplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=State),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_wrap(~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
#mean env estimate
ggplot(postplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=State),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_wrap(~Begin)
```
### Distance to Coast
```{r}
#get the posterior estimates of the env function
postplot<-pc %>% filter(parameter %in% c('beta2_mu','alpha_mu')) %>% dcast(.,Draw+chain~par) %>% group_by(Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta2=c(.$'beta2_mu[1]',.$'beta2_mu[2]'),coast=unique(mxy$coast))) %>% group_by(coast,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
#mean env estimate
ggplot(postplot) + geom_ribbon(aes(x=coast,y=mean,ymin=upper,ymax=lower,fill=State),alpha=0.5) + theme_bw() + labs(col="Transition",x="Distance to Coast (km)",y="Probability",fill="Transition") + facet_wrap(~Begin) + xlim(0,quantile(mxy$coast,0.5))
ggplot(postplot) + geom_ribbon(aes(x=coast,y=mean,ymin=upper,ymax=lower,fill=State),alpha=0.5) + theme_bw() + labs(col="Transition",x="Distance to Coast (km)",y="Probability",fill="Transition") + facet_wrap(~Begin)
```
## By Month
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
table(pc$par)
table(pc$parameter)
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
head(postplot_beta)
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
postplot_beta %>% select(Month,Draw)
postplot_beta %>% select(Month,Draw,par)
postplot_beta %>% select(Month,Draw,par,chain)
dupliated(postplot_beta %>% select(Month,Draw,par,chain))
duplicated(postplot_beta %>% select(Month,Draw,par,chain))
sum(duplicated(postplot_beta %>% select(Month,Draw,par,chain)))
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
table(pc$parameter)
52*5
52*4
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
head(postplot_betra)
head(postplot_beta)
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,MonthF+Draw+chain~parameter+Behavior)
a<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
a
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
postplot_beta %>% filter(Month=="March",Draw==13)
head(pc)
tail(pc)
splitpc[c("beta","beta2")]
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
x<-splitpc[c("beta","beta2")][[1]]
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
x<-splitpc[c("beta","beta2")][[1]]
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
head(sv)
pc<-data.frame(x,sv)
head(pc)
tail(pc)
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
sv<-merge(sv,mindex,by="MonthF",sort=F)
pc<-data.frame(x,sv)
head(pc)
tail(pc)
dim(pc)
pc
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
sv<-merge(sv,mindex,by="MonthF",sort=F)
pc<-data.frame(x,sv)
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=2) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
a<-pc %>% filter(parameter=="beta")
head(a)
tail9a
tail9a
tail(a)
pc %>% filter(parameter %in% c('beta'))
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
postplot_beta
tail(postplot_beta)
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
postplot_beta %>% filter(Month=="March",Draw==13)
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
postplot_beta %>% filter(Month=="March",Draw==13)
a<-pc %>% filter(parameter=="beta")
head(a)
fix(a)
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
sv
x$par
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
pc<-data.frame(x,sv)
pc
colnames(sv)<-c("MonthF","Behavior")
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
mindex
sv<-merge(sv,mindex,by="MonthF",sort=F)
pc<-data.frame(x,sv)
pc
?merge
head(x)
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
pc
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=2) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)
allplot
allplot$Month
postall
allplot$Month
allplot$Month<-factor(allplot$Month,levels=month.name)
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
allplot
allplot$Month
allplot$Month
allplot$Month<-factor(allplot$Month,levels=month.name)
allplot$Month
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=integer(Month)),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5)) + scale_fill_continuous(low='blue',high='red')
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=as.integer(Month)),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5)) + scale_fill_continuous(low='blue',high='red')
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5)) + scale_discrete_continuous(low='blue',high='red')
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling"]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_wrap(~Month)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_wrap(~Month)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=State),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_wrap(~Month)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=State),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + facet_wrap(~Month)+ xlim(0,quantile(mxy$ocean,0.5)) +
ggplot(allplot[allplot$Begin=="Traveling",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=State),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + facet_wrap(~Month)
ggplot(allplot[allplot$Begin=="Traveling",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=State),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + facet_wrap(~Month)
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=State),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + facet_wrap(~Month)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=phi,group=Animal),size=.5)   + scale_color_continuous(low='blue',high='red',limits=c(0,1)) + labs(col="Probability of Foraging")  + theme_inset()
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color="bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=phi,group=Animal),size=.5)   + scale_color_continuous(low='blue',high='red',limits=c(0,1)) + labs(col="Probability of Foraging")  + theme_inset()
sxy<-split(mxy,mxy$Animal)
spp<-lapply(sxy,function(x){
pp<-bbox(cbind(x$x,x$y))
m <- get_map(location=pp,source="google",zoom=6,scale=2,maptype="satellite",color="bw")
ggmap(m)+geom_path(data=x, aes(x=x, y=y,col=phi),size=.5)   + scale_color_continuous(low='blue',high='red',limits=c(0,1)) + labs(col="Probability of Foraging") + facet_wrap(~individual.local.identifier) + theme_inset()
})
spp
ggplot(data=mxy,aes(x=coast,y=logit(phi),col=Month)) + geom_point() + labs(x="Distance to coast",y="Estimated Log Odds of Foraging") + facet_wrap(~individual.local.identifier,ncol=4,scales="free")+ geom_smooth(method="lm")
ggplot(data=mxy,aes(x=ocean,y=logit(phi),col=Month)) + geom_point() + labs(x="Ocean Depth",y="Estimated Log Odds of Foraging") + facet_wrap(~individual.local.identifier,ncol=4,scales="free") + geom_smooth(method="lm")
runf<-function(x){
#arrange by step
#calculate run length
state_change<-rle(as.numeric(x$value))
runl<-data.frame(Animal=unique(x$Animal),runs=state_change$lengths,Behavior=state_change$values)
runl$Behavior<-as.factor(runl$Behavior)
levels(runl$Behavior)<-c("Traveling","Foraging")
return(runl)
}
runs<-pc %>% filter(parameter=='state') %>% group_by(Animal,Month,Draw,chain) %>% do(runf(.))
#turn steps to hours
runs$hours<-runs$runs*step_length
ggplot(mr,aes(x=Behavior,y=mean,ymin=lower,ymax=upper,col=Month)) + geom_pointrange(size=2) + theme_bw() + ggtitle("Average Duration of Behavior") + labs(y="Hours")
mr<-runs %>% group_by(Behavior,Month) %>% summarize(mean=mean(hours),lower=quantile(hours,0.05),upper=quantile(hours,0.95))
ggplot(mr,aes(x=Behavior,y=mean,ymin=lower,ymax=upper,col=Month)) + geom_pointrange(size=2) + theme_bw() + ggtitle("Average Duration of Behavior") + labs(y="Hours")
mr
head(pc)
runs<-pc %>% filter(parameter=='state') %>% group_by(Animal,Draw,chain) %>% do(runf(.))
runs$hours<-runs$runs*step_length
mr<-runs %>% group_by(Behavior,Month) %>% summarize(mean=mean(hours),lower=quantile(hours,0.05),upper=quantile(hours,0.95))
mr<-runs %>% group_by(Behavior) %>% summarize(mean=mean(hours),lower=quantile(hours,0.05),upper=quantile(hours,0.95))
ggplot(mr,aes(x=Behavior,y=mean,ymin=lower,ymax=upper)) + geom_pointrange(size=2) + theme_bw() + ggtitle("Average Duration of Behavior") + labs(y="Hours")
msp<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy[,c("x","y","Animal","phi","timestamp")],proj=CRS("+proj=longlat +datum=WGS84"))
r<-raster(msp,ext=extent(c(-75,-50,-70,-55)))
res(r)<-0.1
m<-rasterize(x=msp,y=r,field="phi")
#plotting
feedmap <- data.frame(rasterToPoints(m))
temp <- get_map(location=bbox(m),source="google",zoom=5,maptype="satellite",color = "bw",scale = 2)
ggmap(temp) + labs(fill="Probabilty of Foraging")+ geom_tile(data=feedmap,aes(x=x, y=y,fill=layer),alpha=0.9) + theme_minimal() + scale_color_discrete(guide="none") + scale_fill_continuous(low="blue",high="red")
source('~/.active-rstudio-document', echo=TRUE)
load("SingleSpecies.RData")
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
#New model to be run, flag turned off if just updating.
newModel<-T
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
#New model to be run, flag turned off if just updating.
newModel<-T
head(allplot)
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
pc
table(pc$par)
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
pc %>% filter(parameter %in% c('beta'))
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=2) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
postall
pc<-melt(jagM$BUGSoutput$sims.array)
jagM
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
head(pc)
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=2) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
pc %>% filter(parameter %in% c('beta'))
pc$Month
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
postplot_beta$MonthF
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Transition") + xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Feeding",fill="Month") + xlim(0,quantile(mxy$ocean,0.5))
