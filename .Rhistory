x@data$id <- 1:nrow(x@data)   # add id column for join
xFort <- fortify(x, data = x@data)
xFortMer <- merge(xFort, x@data, by.x = 'id', by.y = 'id')  # join data
return(xFortMer)
})
plot(polsplot[[1]])
plot(pols[[1]])
ggmap(temp) + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat))
polsplot[[1]]
ggmap(temp) + geom_polygon(data=polsplot[[1]],aes(group=id,x=lat,y=long))
ggmap(temp) + geom_polygon(data=polsplot[[1]],aes(group=id,x=lat,y=long),fill="ice")
colours
colour()
colors()
ggmap(temp) + geom_polygon(data=polsplot[[1]],aes(group=id,x=lat,y=long),fill="whitesmoke")
plot(polsplot[[1]])
plot(pols)
plot(pols[[1]])
library(maps)
map(add=T)
temp <- get_map(location=bbox(m),source="google",zoom=3,maptype="satellite",color = "bw",scale = 2)
l
ggmap(temp) + geom_polygon(data=polsplot[[1]],aes(group=id,x=lat,y=long),fill="whitesmoke")
ggmap(temp) + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat),fill="whitesmoke")
ggmap(temp) + geom_polygon(data=polsplot[[4]],aes(group=id,x=long,y=lat),fill="whitesmoke")
plot(polsplot)
plot(polsplot[[1]])
plot(pols[[1]])
map(add=T)
pols[1[]]
ggmap
temp
?get_map
ggmap(temp) + geom_polygon(data=polsplot[[4]],aes(group=id,x=long,y=lat),fill="whitesmoke")
pols
pols[[1]]
crp
tcrp
plot(tcrp)
ggmap(temp,extent="device") + geom_polygon(data=polsplot,aes(group=id,x=long,y=lat),fill="whitesmoke")
ggmap(temp,extent="device") + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat),fill="whitesmoke")
shp<-list.files("InputData/SeaIce",pattern=".shp",full.names=T)
shp
shp<-list.files("InputData/SeaIce",pattern="v2.shp",full.names=T)
shp
a=32
rp<-readShapePoly(shp[[a]])
#define projection
stere <- "+proj=stere +lat_0=-90 +lat_ts=70 +lon_0=0 +datum=WGS84 +units=m"
proj4string(rp)<-stere
#0 width buffer
rp <- gBuffer(rp, byid=TRUE, width=0)
#crop
e<-extent(-3455516,-757334.6,66739.71,2200756)*1.1
crp<-crop(rp,e)
plot(tcrp<-spTransform(crp,CRS("+proj=longlat +ellps=WGS84")))
#name the layers
#get naming structure
s<-str_match(shp[[a]],"S_(\\d+)_")[,2]
yr<-as.numeric(substring(s,0,4))
mn<-as.numeric(substring(s,5,6))
polygonlist[[a]]<-tcrp
names(polygonlist)[[a]]<-paste(month.abb[mn],yr,sep="_")
?writeSpatialShape
ggmap(temp,extent="device") + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat),fill="whitesmoke")
ggplot() + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat),fill="whitesmoke")
plot(pols)
plot(pols[[1]])
pols[[1]]
ggplot() + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat),fill="whitesmoke")
ggplot() + geom_polygon(data=polsplot[[1]],aes(group=id,x=long,y=lat),fill="black") + theme_bw()
pols[[1]]
x<-pols[[1]]
x@data$id <- 1:nrow(x@data)   # add id column for join
x@data$id
xFort <- fortify(x, data = x@data)
xFortMer <- merge(xFort, x@data, by.x = 'id', by.y = 'id')  # join data
xFortMer
ggplot() + geom_polygon(data=polsplot[[1]],aes(group=group,x=long,y=lat),fill="black") + theme_bw()
ggmap(temp,extent="device") + geom_polygon(data=polsplot[[1]],aes(group=group,x=long,y=lat),fill="whitesmoke")
polsplot[[1]]
plot(pols[[1]])
data<-fortify(pols[[1]])
data
ggplot() + geom_polygon(data=data,aes(x=long,y=lat,group=group))
#as individual polygons
#read
shp<-list.files("InputData/SeaIce",pattern="v2.shp",full.names=T)
polygonlist<-list()
for(a in 1:length(shp)){
rp<-readShapePoly(shp[[a]])
#define projection
stere <- "+proj=stere +lat_0=-90 +lat_ts=70 +lon_0=0 +datum=WGS84 +units=m"
proj4string(rp)<-stere
#0 width buffer
rp <- gBuffer(rp, byid=TRUE, width=0)
#crop
e<-extent(-3455516,-757334.6,66739.71,2200756)*1.1
crp<-crop(rp,e)
plot(tcrp<-spTransform(crp,CRS("+proj=longlat +ellps=WGS84")))
#name the layers
#get naming structure
s<-str_match(shp[[a]],"S_(\\d+)_")[,2]
yr<-as.numeric(substring(s,0,4))
mn<-as.numeric(substring(s,5,6))
polygonlist[[a]]<-fortify(tcrp)
names(polygonlist)[[a]]<-paste(month.abb[mn],yr,sep="_")
}
for(x in 1:length(polygonlist)){
write.csv(polygonlist[[x]],paste("C:/Users/Ben/Documents/Whales/InputData/SeaIce/",names(polygonlist)[[x]],"LatLong",sep=""))
}
pols<-lapply(fns,function(x){read.csv(x)})
fns<-paste("InputData/SeaIce/",month.abb[1:7],"_2015","LatLong.csv",sep="")
pols<-lapply(fns,function(x){read.csv(x)})
write.csv(polygonlist[[x]],paste("C:/Users/Ben/Documents/Whales/InputData/SeaIce/",names(polygonlist)[[x]],"LatLong.csv",sep=""))
#write each
for(x in 1:length(polygonlist)){
write.csv(polygonlist[[x]],paste("C:/Users/Ben/Documents/Whales/InputData/SeaIce/",names(polygonlist)[[x]],"LatLong.csv",sep=""))
}
fns<-paste("InputData/SeaIce/",month.abb[1:7],"_2015","LatLong.csv",sep="")
pols<-lapply(fns,function(x){read.csv(x)})
names(pols)<-month.abb[1:7]
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+   ggtitle(names(monthras)[[x]])+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(polsplot[[x]],aes(x=long,y=lat,group=group))
x=3
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(polsplot[[x]],aes(x=long,y=lat,group=group))
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(data=polsplot[[x]],aes(x=long,y=lat,group=group))
fns<-paste("InputData/SeaIce/",month.abb[1:7],"_2015","LatLong.csv",sep="")
pols<-lapply(fns,function(x){read.csv(x)})
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(data=pols[[x]],aes(x=long,y=lat,group=group))
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(data=pols[[1]],aes(x=long,y=lat,group=group))
pols
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(data=pols[[1]],aes(x=long,y=lat,group=group),fill="whitesmoke")
ggmap(temp) + labs(fill="Mean Probabilty of Foraging")+theme(axis.text.x=element_blank(),axis.text.y=element_blank()) + xlim(-75,-50) + ylim(-70,-55) + labs(x="",y="") + geom_polygon(data=pols[[2]],aes(x=long,y=lat,group=group),fill="whitesmoke")
#as individual polygons
#read
shp<-list.files("InputData/SeaIce",pattern="v2.shp",full.names=T)
polygonlist<-list()
for(a in 1:length(shp)){
rp<-readShapePoly(shp[[a]])
#define projection
stere <- "+proj=stere +lat_0=-90 +lat_ts=70 +lon_0=0 +datum=WGS84 +units=m"
proj4string(rp)<-stere
#0 width buffer
rp <- gBuffer(rp, byid=TRUE, width=0)
#crop
e<-extent(-3455516,-757334.6,66739.71,2200756)*1.1
crp<-crop(rp,e)
plot(tcrp<-spTransform(crp,CRS("+proj=longlat +ellps=WGS84")))
#name the layers
#get naming structure
s<-str_match(shp[[a]],"S_(\\d+)_")[,2]
yr<-as.numeric(substring(s,0,4))
mn<-as.numeric(substring(s,5,6))
plot(tcrp)
polygonlist[[a]]<-fortify(tcrp)
names(polygonlist)[[a]]<-paste(month.abb[mn],yr,sep="_")
}
#write each
for(x in 1:length(polygonlist)){
write.csv(polygonlist[[x]],paste("C:/Users/Ben/Documents/Whales/InputData/SeaIce/",names(polygonlist)[[x]],"LatLong.csv",sep=""))
}
fns<-paste("InputData/SeaIce/",month.abb[1:7],"_2015","LatLong.csv",sep="")
pols<-lapply(fns,function(x){read.csv(x)})
names(pols)<-month.abb[1:7]
hed(pols[[1]])
head(pols[[1]])
ggplot() + geom_polygon(data=pols[[1]])
ggplot() + geom_polygon(data=pols[[1]],aes(x=long,y=lat))
ggplot() + geom_polygon(data=pols[[1]],aes(x=long,y=lat,group=group))
ggmap(temp) + geom_polygon(data=pols[[1]],aes(x=long,y=lat,group=group))
ggmap(temp) + geom_polygon(data=pols[[1]],aes(x=long,y=lat,group=group),fill="whitesmoke")
ksuit<-extract(x=stack(monthras),y=ksp)
kdf<-data.frame(ksp,ksuit)
ggplot(kdf,aes(y=ksuit,x=log(C1KRIcatchKG))) + geom_point() + theme_bw() + labs(x="Log KG Tonnes of Krill Catch",y="Foraging Habitat Suitability") + geom_smooth(method="glm",method.args=list(family="binomial"))
head(kdf)
melt(kdf)
head(melt(kdf,measure.vars=month.name[1:7]))
head(melt(kdf,measure.vars=names(monthras)))
mdf<-melt(kdf,measure.vars=names(monthras))
ggplot(mdf,aes(y=ksuit,x=log(C1KRIcatchKG))) + geom_point() + theme_bw() + labs(x="Log KG Tonnes of Krill Catch",y="Foraging Habitat Suitability") + geom_smooth(method="glm",method.args=list(family="binomial"))
ggplot(mdf,aes(y=value,x=log(C1KRIcatchKG),col=variable)) + geom_point() + theme_bw() + labs(x="Log KG Tonnes of Krill Catch",y="Foraging Habitat Suitability") + geom_smooth(method="glm",method.args=list(family="binomial"))
factor(mdf$variable)
factor(mdf$variable,levels=month.name)
mdf$Month<-factor(mdf$variable,levels=month.name)
ggplot(mdf,aes(y=value,x=log(C1KRIcatchKG),col=Month)) + geom_point() + theme_bw() + labs(x="Log KG Tonnes of Krill Catch",y="Foraging Habitat Suitability") + geom_smooth(method="glm",method.args=list(family="binomial"))
load("SingleSpecies.RData")
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=3) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)
postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0))
warnings()
postall %>% group_by(Month,Draw,chain)
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
warnings()
head(allplot)
allplot %>% filter(Begin=="Foraging")
a<0allplot %>% filter(Begin=="Foraging"
a<-allplot %>% filter(Begin=="Foraging"
a<-allplot %>% filter(Begin=="Foraging")
hist(a$mean)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Feeding",fill="Month") + xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=0,coast=unique(mxy$coast))) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$coast,0.5))
allplot
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=0,coast=unique(mxy$coast))) %>% group_by(x=coast,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$coast,0.5))
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Feeding",fill="Month") + xlim(0,quantile(mxy$ocean,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Feeding",fill="Month") + xlim(0,quantile(mxy$coast,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Feeding",fill="Month") + xlim(0,quantile(mxy$coast,0.5))
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Feeding",fill="Month") + xlim(0,quantile(mxy$coast,0.5))
#mean env estimate
ggplot(allplot[allplot$Begin=="Traveling" & allplot$State == "Foraging",]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5,size=1) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching",fill="Month")
monthras
monthras
monthpar
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
postall$Month<-factor(postall$Month,levels=month.name)
Months<-unique(postall$Month)
#get the posterior estimates of the env function
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
postall$Month<-factor(postall$Month,levels=month.name)
Months<-unique(postall$Month)
monthras<-list()
for (x in Months){
monthpar<-postall %>% filter(Month==x)
##Bathymetry
s<-stack(rice,distc)
#Traveling
travpar<-calc(s,function(x){ 1-inv.logit(mean(monthpar$`alpha_mu[1]`) + mean(monthpar$`beta_1` ) * x[1] + mean(monthpar$`beta_2` * x[2]))})
travdf<-data.frame(rasterToPoints(travpar))
monthras[[x]]<-travpar
}
names(monthras)<-Months
diffras<-monthras[[1]]-monthras[[5]]
diffdf<-as.data.frame(rasterToPoints(diffras))
ggmap(temp) + geom_tile(data=diffdf,aes(x=x, y=y,fill=layer)) + scale_fill_gradient2("",low='blue',midpoint=0,high='red') + ggtitle("Comparing January and May")
stack(monthras)
plot(stack(monthras))
##Chains
```{r,fig.height=25,eval=T}
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=3) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
```
```{r,eval=F}
#write.csv
#write.csv(pc,"OutData/pars.csv")
pc<-read.csv("OutData/pars.csv")
pc$Behavior<-as.factor(pc$Behavior)
```
```{r,fig.width=20}
#Plot
ggplot(data=pc[!pc$parameter %in% c("phi","state"),],aes(x=value)) + geom_histogram() + facet_wrap(~par,scales='free',ncol=3) + theme_bw()  + ggtitle("Estimated parameters")
load("SingleSpecies.RData")
head(pc)
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta'))
head(postplot)
head(postplot_beta)
head(postplot_beta)
postplot_beta %>% filter(Draw==1,chain==1,Month=="January")
k<-pc
#bind chains
pc<-melt(jagM$BUGSoutput$sims.array)
colnames(pc)<-c("Draw","chain","par","value")
#extract parameter name
pc$parameter<-data.frame(str_match(pc$par,"(\\w+)"))[,-1]
#Extract index
splitpc<-split(pc,pc$parameter)
#single index
splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")]<-lapply(splitpc[c("alpha_mu","beta_mu","beta2_mu","gamma","theta")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+)]"))[,3]
pc<-data.frame(x,Behavior=sv)
return(pc)
})
## double index
splitpc[c("beta","beta2")]<-lapply(splitpc[c("beta","beta2")],function(x){
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+)]"))[,3:4]
colnames(sv)<-c("MonthF","Behavior")
pc<-data.frame(x,sv)
#get month name
mindex<-mxy %>% select(MonthF,Month) %>% distinct()
pc<-merge(pc,mindex,by="MonthF")
return(pc)
})
#State index
splitpc[c("state")]<-lapply(splitpc[c("state")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+)]"))[,3:5]
colnames(sv)<-c("Animal","Track","step")
pc<-data.frame(x,sv)
})
#Three index
splitpc[c("phi")]<-lapply(splitpc[c("phi")],function(x){
#As matrices
sv<-data.frame(str_match(x$par,"(\\w+)\\[(\\d+),(\\d+),(\\d+),(\\d+)]"))[,3:6]
colnames(sv)<-c("Animal","Track","step","Behavior")
pc<-data.frame(x,sv)
})
#bind all matrices back together
pc<-rbind_all(splitpc)
rm(splitpc)
#plot all but phi and state
ggplot(pc[!pc$parameter %in% c("phi","state"),],aes(x=Draw,y=value)) + facet_wrap(~par,scales="free",ncol=3) + geom_line(aes(col=as.factor(chain))) + labs(col="Chain")
head(pc)
dim(pc)
dim(k)
pc*2
dim(pc)*2
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
head(k)
head(pc)
k$Estimate
table(k$Estimate)
todraw<-table(pc$par)[1]
todraw
dim(pc)
pc$Estimate<-"Posterior"
dim(pc)
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
warnings()
monthras
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postplot_beta
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta',"beta2")) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
head(postall)
#get the posterior estimates of the env function
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta',"beta2")) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
postall$Month<-factor(postall$Month,levels=month.name)
Months<-unique(postall$Month)
monthras<-list()
for (x in Months){
monthpar<-postall %>% filter(Month==x)
##Bathymetry
s<-stack(rice,distc)
#Traveling
travpar<-calc(s,function(x){ 1-inv.logit(mean(monthpar$`alpha_mu[1]`) + mean(monthpar$`beta_1` ) * x[1] + mean(monthpar$`beta2_1` * x[2]))})
travdf<-data.frame(rasterToPoints(travpar))
monthras[[x]]<-travpar
}
names(monthras)<-Months
monthras
plot(stack(monthras))
plot(stack(monthras))
plot(stack(monthras))
plot(stack(monthras))
dev.off()
dev.off()
plot(stack(monthras))
dev.off()
monthras
diffras<-monthras[[1]]-monthras[[5]]
diffdf<-as.data.frame(rasterToPoints(diffras))
plot(diffdf)
plot(diffras)
plot(diffras)
monthras[[1]]-monthras[[5]]
ksp<-SpatialPointsDataFrame(cbind(krill$GridMidpointDegreeLon,krill$GridMidpointHalfDegreeLat),krill)
#extract probability of feeding at krill midpoints
ksuit<-extract(x=stack(monthras),y=ksp)
kdf<-data.frame(ksp,ksuit)
mdf<-melt(kdf,measure.vars=names(monthras))
mdf$Month<-factor(mdf$variable,levels=month.name)
ggplot(mdf,aes(y=value,x=log(C1KRIcatchKG),col=Month)) + geom_point() + theme_bw() + labs(x="Log KG Tonnes of Krill Catch",y="Foraging Habitat Suitability") + geom_smooth(method="glm",method.args=list(family="binomial"))
jagM
head(jagM)
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
warnings()
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta2')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=0,coast=unique(mxy$coast))) %>% group_by(x=coast,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
postplot_beta<-pc %>% filter(parameter %in% c('beta2')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta2_1',.$'beta2_2'),x=0,coast=unique(mxy$coast))) %>% group_by(x=coast,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$coast,0.5))
#get the posterior estimates of the env function
postplot_alpha<-pc %>% filter(parameter %in% c('alpha_mu')) %>% do(dcast(.,Draw+chain~par))
postplot_beta<-pc %>% filter(parameter %in% c('beta')) %>% dcast(.,Month+Draw+chain~parameter+Behavior)
postall<-merge(postplot_alpha,postplot_beta,by=c("Draw","chain"))
allplot<-postall %>% group_by(Month,Draw,chain) %>% do(dplot(a1=c(.$'alpha_mu[1]',.$'alpha_mu[2]'),beta=c(.$'beta_1',.$'beta_2'),x=unique(mxy$ocean),coast=0)) %>% group_by(x=x,Month,Begin,State) %>% summarize(mean=mean(y),lower=quantile(y,0.05),upper=quantile(y,0.95))
allplot$Month<-factor(allplot$Month,levels=month.name)
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)+ xlim(0,quantile(mxy$ocean,0.5))
#mean env estimate
ggplot(allplot) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability",fill="Transition") + facet_grid(State~Begin)
