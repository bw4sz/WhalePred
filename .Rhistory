mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141","112701","131159","131142","131144","154186","123224"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
head(mxy)
dim(mdy)
dim(mxy)
dim(mxy[!mxy$ETOPO1.Elevation>0,])
53622-51763
#raster layers
#ice
ice<-raster("InputData/ETOPO1_Ice_g_geotiff.tif")
ice<-round(ice*-1/1000,3)
rice<-aggregate(ice,fact=0.1/res(ice))
#coast
distc<-raster("InputData/DistancetoCoast.tif")
rice[rice<0]<-NA
distc[is.na(rice)]<-NA
#read data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -1133643618235885002.csv")
##need to look into making into a movebank object.
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Daytime.SST
mdat$ChloroA<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141","112701","131159","131142","131144","154186","123224"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
#New model to be run, flag turned off if just updating.
newModel<-T
#raster layers
#ice
ice<-raster("InputData/ETOPO1_Ice_g_geotiff.tif")
ice<-round(ice*-1/1000,3)
rice<-aggregate(ice,fact=0.1/res(ice))
#coast
distc<-raster("InputData/DistancetoCoast.tif")
rice[rice<0]<-NA
distc[is.na(rice)]<-NA
#read data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -1133643618235885002.csv")
##need to look into making into a movebank object.
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Daytime.SST
mdat$ChloroA<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141","112701","131159","131142","131144","154186","123224"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
head(mxy)
dim(mxy)
table(mxy$Animal)
length(table(mxy$Animal))
table(mxy$Animal)
mean(table(mxy$Animal))
sd(table(mxy$Animal))
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
moved<-move(x=mxy$x,y=mxy$y,time=as.POSIXct(mxy$timestamp),proj=CRS("+proj=longlat +ellps=WGS84"),animal=mxy$Animal,data=as.data.frame(mxy),sensor=mxy$Animal,removeDuplicatedTimestamps=T)
dstat<-melt(move::distanceSummary(moved))
head(dstat)
?distanceSummary
moved
head(dstat)
tstat<-move::timeSummary(moved)
tstat<-melt(tstat,measure.vars=colnames(tstat[[1]]))
tstat<-droplevels(tstat[tstat$variable %in% c("Duration","AverDur"),])
tstat
dstat
d<-move::distanceSummary(moved)
head(d)
head(dstat)
filter(dstat,variable=="AverDist") %>% group_by(L1) %>% summarize(mean(value))
filter(dstat,variable=="AverDist")%>% summarize(mean(value))
filter(dstat,variable=="TravDist")%>% summarize(mean(value))
filter(dstat,variable=="TravDist")%>% summarize(mean(value)/1000)
filter(dstat,variable=="AverDist")%>% summarize(mean(value))
head(tstat)
filter(dstat,variable=="AverDur")%>% summarize(mean(value))
filter(tstat,variable=="AverDur")%>% summarize(mean(value))
?timeSummary
head(mxy)
##Time is the beginning of the first point.
step_length=6
sxy<-split(mxy,mxy$Animal)
#time diff function
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=12) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=6)
#Format matrices for jags
mxy<-rbind_all(sxy)
######recode whales
#mxy$Animal<-as.numeric(as.factor(mxy$Animal))
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$Step<-as.numeric(cut(as.POSIXct(x$timestamp),"6 hours"))
return(x)
})
mxy<-rbind_all(sxy)
#total number of steps per track/animal
steps_all<-mxy %>% group_by(Animal,Track) %>% summarize(n=length(unique(Step)))
# give each step a label
mxy<-mxy %>% group_by(Animal,Track,Step) %>% mutate(jStep=1:n())
#Cast time array
j<-acast(mxy,Animal~Track~Step~jStep,value.var="j")
#how many observations per individual in each Step
mxy$Step<-factor(mxy$Step,levels=1:max(steps_all$n))
idx<-melt(table(mxy$Animal,mxy$Track,mxy$Step))
colnames(idx)<-c("Animal","Track","Step","jStep")
idx<-acast(data=idx,Animal~Track~Step)
#make ocean a matrix -> MEAN VALUE -> will this yield a jags error on empty cells?
oc<-acast(mxy,Animal~Track~Step,value.var="ocean",fun.aggregate = mean)
#make coast a matrix -> MEAN VALUE -> will this yield a jags error on empty cells?
coast<-acast(mxy,Animal~Track~Step,value.var="coast",fun.aggregate = mean)
#Individuals
ind=length(unique(mxy$Animal))
#tracks per indivudal
tracks<-mxy %>% group_by(Animal) %>% summarize(tracks=length(unique(Track))) %>% .$tracks
#steps per track
steps<-acast(steps_all,Animal~Track,value.var="n")
#obs array
obs<-melt(mxy,measure.vars=c("x","y"))
obs<-acast(obs,Animal~Track~Step~jStep~variable)
dim(mxy)
mxy %>% group_by(Animal) %>% summarise(max(j))
head(mxy)
mxy %>% group_by(Animal,Track) %>% summarize(max(jStep))
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(mean(m))
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(mean(m)*6)
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(n=mean(m)*6) %>% summarize(mean(n))
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(mean(m)*6)
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(n=mean(m)*6) %>% filter(arrange(n))
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(n=mean(m)*6) %>% arrange(n))
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(n=mean(m)*6) %>% arrange(n)
mxy %>% group_by(Animal,Track) %>% summarize(m=max(jStep)) %>% summarize(n=mean(m)*6) %>% arrange(desc(n))
mxy %>% group_by(Animal,Track)
mxy %>% group_by(Animal,Track) %>% summarize(n_distinct())
mxy %>% group_by(Animal,Track) %>% summarize(n=n_distinct(Track))
mxy %>% group_by(Animal) %>% summarize(n=n_distinct(Track))
mxy %>% group_by(Animal) %>% summarize(n=n_distinct(Track)) %>% summarize(mean(n))
dim(obs)
mxy %>% group_by(Animal) %>% mutate(max(timestamp()))
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:16 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
##------ Mon Aug 15 11:46:17 2016 ------##
mxy %>% group_by(Animal) %>% do(difftime(max(timestamp)-min(timestamp)))
head(mxy)
mxy %>% group_by(Animal) %>% do(difftime(max(timestamp),min(timestamp)))
mxy %>% group_by(Animal) %>% do(difftime(max(timestamp),min(timestamp)))
mxy %>% group_by(Animal) %>% do(difftime(max(.$timestamp),min(.$timestamp)))
mxy %>% group_by(Animal) %>% summarize(difftime(max(.$timestamp),min(.$timestamp)))
mxy %>% group_by(Animal) %>% summarize(difftime(max(timestamp),min(timestamp)))
mxy %>% group_by(Animal) %>% summarize(t=difftime(max(timestamp),min(timestamp)))
mxy %>% group_by(Animal) %>% summarize(t=difftime(max(timestamp),min(timestamp))) %>% arrange(desc(t))
mxy %>% group_by(Animal) %>% summarize(t=difftime(max(timestamp),min(timestamp))) %>% arrange(arrange(t))
mxy %>% group_by(Animal) %>% summarize(t=difftime(max(timestamp),min(timestamp))) %>% arrange(t)
mxy %>% group_by(Animal) %>% summarize(t=difftime(max(timestamp),min(timestamp))) %>% arrange(t) %>% summarize(mean(t),sd(t))
mxy %>% group_by(Animal) %>% filter(Lat > -55)summarize(min()
mxy %>% group_by(Animal) %>% filter(Lat > -55) %>% summarize(min()
head(mxy)
mxy %>% group_by(Animal) %>% filter(location.lat > -55) %>% summarize(min()
mxy %>% group_by(Animal) %>% filter(location.lat > -55) %>% summarize(min(timestamp))
mxy %>% group_by(Animal) %>% filter(location.lat > -50) %>% summarize(min(timestamp))
mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% summarize(min(timestamp))
mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% summarize(d=min(timestamp)) %>% summarise(mean(d))
mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% summarize(d=min(timestamp)) %>% summarise(mean(d))
mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% summarize(min(julian(timestamp)))
?julian
mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=strftime(timestamp, format = "%j"))
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=strftime(timestamp, format = "%j"))
a$d
a[1,]
a$d[`]
a$d[1]
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(mean(d))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(min(d))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% summarize(mean(md))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% summarize(min(md))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% summarize(max(md))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% summarize(max(md))
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d))
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md)
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md)
a$Animal
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -65) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -62) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md)
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% summarize(mean(md))
a
strftime(a$`mean(md)`,format="%d/%m/%Y")
strftime(a$`mean(md)`,format="%d/%m/%y")
strftime(a$`mean(md)`,format="%d/%m/%y")
?strftime
strptime(a$`mean(md)`,format="%d/%m/%y")
strptime(a$`mean(md)`,format="%D/%m/%y")
strftime(a$`mean(md)`,format="%d/%m/%Y")
strftime(a$`mean(md)`,format="%d/%m/%Y",origin=0)
strftime(a$`mean(md)`,format="%d/%m/%Y",origin=0)
strptime(a$`mean(md)`,format="%d/%m/%y")
strptime(a$`mean(md)`,format="%d/%m/%y")
143
a
31+30
yday
??julian
strftime(a$`mean(md)`,format="%d/%m/%Y",
julian(a$`mean(md)`)
julian(jul=a$`mean(md)`)
julian(jul=a$`mean(md)`,origin-0)
julian(jul=a$`mean(md)`,origin=0)
a
143/31
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% summarize(mean(md))
.6*30
31*4
124+18
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% summarize(min(md))
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% summarize(min(md)/31)
a
.64*31
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% summarize(max(md)/31)
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md)
a
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + theme_inset()
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5)
#raster layers
#ice
ice<-raster("InputData/ETOPO1_Ice_g_geotiff.tif")
ice<-round(ice*-1/1000,3)
rice<-aggregate(ice,fact=0.1/res(ice))
#coast
distc<-raster("InputData/DistancetoCoast.tif")
rice[rice<0]<-NA
distc[is.na(rice)]<-NA
#read data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -1133643618235885002.csv")
##need to look into making into a movebank object.
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Daytime.SST
mdat$ChloroA<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141","112701","131159","131142","131144","154186","123224"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5)
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md)
a
a$md*31
a$md/31
a$md
format(strptime(a$md, format="%j"), format="%m-%d")
format(strptime(a$md, format="%j"), format="%m-%d")
e<-format(strptime(a$md, format="%j"), format="%m-%d")
mean(e)
m <- get_map(location=pp,source="google",zoom=4,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5)
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j")))
ggmap(m)+geom_path(data=a, aes(x=x, y=y,col=as.factor(Animal)),size=.5)
a %>% group_by(Animal) %>% n_groups()
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md)
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% mutate(format(strptime(md, format="%j"), format="%m-%d")
)
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% mutate(format(strptime(md, format="%j"), format="%b-%d")
)
a
a<-mxy %>% group_by(Animal) %>% filter(location.lat > -60) %>% mutate(d=as.numeric(strftime(timestamp, format = "%j"))) %>% summarize(md=min(d)) %>% arrange(md) %>% mutate(format(strptime(md, format="%j"), format="%b-%d")
)
a$md
format(strptime(mean(a$md), format="%j"), format="%b-%d")
install.packages("bsam")
library(moveHMM)
?momoveHMM
?moveHMM
prepData(mxy,type="LL")
prep<-prepData(mxy,type="LL")
mxy$ID<-mxy$Animal
prep<-prepData(mxy,type="LL")
colnames(mxy)
library(moveHMM)
mh<-mxy %>% select(x=location.long,y=location.lat,ID=Animal,ocean,coast)
prep<-prepData(mh,type="LL")
head(mh)
plot(mh,compact=T)
head(prep)
plot(prep,compact=T)
plot(prep,compact=T)
mh<-mxy %>% select(x=location.long,y=location.lat,ID=Animal,ocean,coast) %>% filter(ID %in% c(24,25))
prep<-prepData(mh,type="LL")
head(prep)
anglePar0=anglePar0,formula=~ocean)
## initial parameters for gamma and von Mises distributions
mu0 <- c(0.1,1) # step mean (two parameters: one for each state)
sigma0 <- c(0.1,1) # step SD
zeromass0 <- c(0.1,0.05) # step zero-mass
stepPar0 <- c(mu0,sigma0,zeromass0)
angleMean0 <- c(pi,0) # angle mean
kappa0 <- c(1,1) # angle concentration
anglePar0 <- c(angleMean0,kappa0)
m <- fitHMM(data=data,nbStates=2,stepPar0=stepPar0,
anglePar0=anglePar0,formula=~ocean)
## initial parameters for gamma and von Mises distributions
mu0 <- c(0.1,1) # step mean (two parameters: one for each state)
sigma0 <- c(0.1,1) # step SD
zeromass0 <- c(0.1,0.05) # step zero-mass
stepPar0 <- c(mu0,sigma0,zeromass0)
angleMean0 <- c(pi,0) # angle mean
kappa0 <- c(1,1) # angle concentration
anglePar0 <- c(angleMean0,kappa0)
m <- fitHMM(data=prep,nbStates=2,stepPar0=stepPar0,
anglePar0=anglePar0,formula=~ocean)
m
plot(m)
?plot
plot(m,compact=T)
par(ask=F)
plot(m)
plot(m,par(ask=F))
par(ask=F)
plot(m)
par(ask=FALSE)
plot(m)
par
?par
devAskNewPage(ask = F)
plot(m)
m
