library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
#read whale data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Daytime.SST
mdat$ChloroA_Aqua<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
mdat$ChloroA_Terra<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
#hold copy of orig
oxy<-mxy
#Plot
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ice<-raster("InputData/ETOPO1_Ice_g_geotiff.tif")
ice<-round(ice*-1/1000,3)
rice<-aggregate(ice,fact=0.1/res(ice))
plot(rice)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover),size=.5)  + scale_color_continuous(low='blue',high='red')
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=ocean),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
distc<-raster("InputData/DistancetoCoast.tif")
rice[rice<0]<-NA
distc[is.na(rice)]<-NA
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=distc,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=coast,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=SST,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
mdat$SST<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Daytime.SST
mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Daytime.SST
mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=SST,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
#read whale data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$ChloroA_Aqua<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
mdat$ChloroA_Terra<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=SST,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
mdatDSST$<-mdat$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover
mdatDSST<-mdat$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover
#read whale data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdatDSST<-mdat$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$ChloroA_Aqua<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
mdat$ChloroA_Terra<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
mxy$Month<-factor(mxy$Month,levels=month.name)
head(mxy$Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=DSST,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
mdat$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover
#read whale data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdatDSST<-mdat$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$ChloroA_Aqua<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
mdat$ChloroA_Terra<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207","131151","112703","121211","131132","112737","131156","12326","123232","112705","154187","121210","131134","131141","112701","131159","131142","131144","154186","123224"),]
#mxy<-mxy[mxy$Animal %in% c("131134","131141"),]
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy)
d<-crop(d,y=extent(c(-75,-50,-70,-55)))
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
mxy$Month<-factor(mxy$Month,levels=month.name)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=DSST,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=ECMWF.Interim.Full.Daily.SFC.Sea.Surface.Temperature,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
list.files("InputData/",pattern="CHL")
chl<-list.files("InputData/",pattern="CHL",full.names=T)
chlr<-stack(chl)
plot(chlr)
library(maps)
?plor
?plot
plot(chlr,addfun=map(add=T))
plot(chlr,addfun=map())
plot(chlr,addfun=map(add=T))
chlr
rice
ice
plot(chlr[[1]])
map(add=T)
plot(chlr,addfun=map(add=T),extent(c(-75,-50,-70,-55))
plot(chlr,addfun=map(add=T),extent(c(-75,-50,-70,-55)))
?plot
plot(chlr,addfun=map(add=T),ext=extent(c(-75,-50,-70,-55)))
crop(chlr,ext=extent(c(-75,-50,-70,-55)))
crop(chlr,extent(c(-75,-50,-70,-55)))
chlr<-crop(chlr,extent(c(-75,-50,-70,-55)))
plot(chlr)
chl<-list.files("InputData/",pattern="CHL",full.names=T)
chlr<-stack(chl)
quantile(chlr)
chlr
chl
names(chl)
str_match(chl,"chlor_a-{\d+}")
str_match(chl,"chlor_a-{\\d+}")
str_match(chl,"chlor_a-(\\d+)")
str_match(chl,"chlor_a-(\\d+[4])")
str_match(chl,"chlor_a-(\\d+{4})")
str_match(chl,"chlor_a-(\\d{4})")
str_match(chl,"chlor_a-(\\d{4})(\\d{2])")
str_match(chl,"chlor_a-(\\d{4})(\\d{2})")
str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,1:2]
str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,2:2]
str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,2:3]
data.frame(str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,2:3])
paste(str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,2:3])
sn<-str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,2:3]
sn
paste(sn[,1],sn[,2])
paste(sn[,1],sn[,2],sep="_")
names(chlr)<-paste(sn[,1],sn[,2],sep="_")
plot(chlr)
plot(chlr,addfun=function(x){map(add=T)})
plot(log(chlr),addfun=function(){map(add=T)})
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=ChloroA_Aqua,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=log(ChloroA_Aqua),group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=mxy$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover,group=Animal),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
pca<-prcomp(mxy[,colnames(mxy) %in% c("ocean","coast","DSST","SST","ChloroA_Aqua","ChloroA_Terra")])
comp<-complete.cases(mxy[,colnames(mxy) %in% c("ocean","coast","DSST","SST","ChloroA_Aqua","ChloroA_Terra")])
head(comp)
?complete.cases
sxy<-mxy[,colnames(mxy) %in% c("ocean","coast","DSST","SST","ChloroA_Aqua","ChloroA_Terra")]
sxy<-sxy[complete.cases(sxy),]
pca<-prcomp(sxy)
biplot(pca)
?pairs
library(vegan)
pca<-princomp(sxy)
ordiplot(pca)
??ggbiplot
library(ggbiplot)
ggbiplot(pca)
?princomp
?prcomp
pca<-prcomp(sxy,scale. = T)
ggbiplot(pca)
pca<-prcomp(sxy,scale. = T,center = T)
ggbiplot(pca)
chl<-list.files("InputData/",pattern="CHL",full.names=T)
mxy$M
chlr<-stack(chl)
names(chl)
sn<-str_match(chl,"chlor_a-(\\d{4})(\\d{2})")[,2:3]
names(chlr)<-paste(sn[,1],sn[,2],sep="_")
mdat$ChloroA_Aqua<-log(mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
mdat$ChloroA_Aqua
mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
sum(mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A==0)
sum(mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A==0,na.rm =T)
mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP
mdat$ChloroA<-log(mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
mdat$NPP<-log(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP)
library(GGally)
load("DataExploration.RData")
head(psum)
psum %>% filter(parameter==c("beta_mu","beta"))
psum %>% filter(parameter==c("beta_mu","beta")) %>% mutate(findInterval(0,(lower,upper))==1)
psum %>% filter(parameter==c("beta_mu","beta")) %>% mutate(Significant=!findInterval(0,c(lower,upper))==1)
psum %>% filter(parameter==c("beta_mu","beta")) %>% mutate(Significant=!findInterval(0,sort(c(lower,upper)))==1)
!findInterval(0,sort(c(5,10)))==1
!findInterval(0,sort(c(-5,10)))==1
!findInterval(0,sort(c(-1,1)))==1
!findInterval(0,sort(c(-1,-5)))==1
!findInterval(0,sort(c(1,5)))==1
head(psum)
psum %>% filter(parameter==c("beta_mu","beta")) %>% ungroup() %>%  mutate(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig<-psum %>% filter(parameter==c("beta_mu","beta")) %>% ungroup() %>%  mutate(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig$Significant
sig<-psum %>% filter(parameter==c("beta_mu","beta")) %>%  rowwise(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig<-psum %>% filter(parameter==c("beta_mu","beta")) mutate(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig<-psum %>% filter(parameter==c("beta_mu","beta")) sig$Significant<-!findInterval(0,sort(c(lower,upper)))==1)
sig<-psum %>% filter(parameter==c("beta_mu","beta")) sig$Significant<-!findInterval(0,sort(c(lower,upper)))==1
sig<-psum %>% filter(parameter==c("beta_mu","beta")) sig$Significant<-!findInterval(0,sort(c(lower,upper)))==1
sig<-psum %>% filter(parameter==c("beta_mu","beta")) sig$Significant<-!findInterval(0,sort(c(lower,upper)))==1
sig<-psum %>% filter(parameter==c("beta_mu","beta"))
sig$Significant<-!findInterval(0,sort(c(lower,upper)))==1
sig$Significant<-!findInterval(0,sort(c(sig$lower,sig$upper)))==1
head(sig)
findInterval(0,sort(c(sig$lower,sig$upper)))
sig<-psum %>% filter(parameter==c("beta_mu","beta")) %>%  summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig
head(psum)
sig<-psum %>% filter(parameter==c("beta_mu","beta")) %>% group_by(L1,par,mean,lower,upper) %>% summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig
sig<-psum %>% filter(parameter==c("beta_mu","beta")) %>% group_by(L1,par) %>% summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1)
sig
psum<-pc %>% group_by(L1,parameter,par)%>% filter(parameter==c("beta_mu","beta"))  %>%  summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
head(pc)
pc$L`
pc$L1
psum<-pc %>% group_by(L1,parameter,par)%>% filter(parameter==c("beta_mu","beta"))  %>%  summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
rowwise()
head(pc)
psum<-pc %>% group_by(L1,parameter,par)%>% filter(parameter %in% c("beta_mu","beta"))  %>%  summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
sum
psum
psum<-pc %>% group_by(L1,parameter,par) %>% summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
rowwise(pc)
psum<-pc %>% group_by(L1,parameter,par) %>% summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
load("DataExploration.RData")
psum<-pc %>% group_by(L1,parameter,par) %>% summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
psum<-pc %>% group_by(L1,parameter,par)%>% filter(parameter %in% c("beta_mu","beta"))  %>%  summarize(mean=mean(value),lower=quantile(value,0.05),upper=quantile(value,0.95))
psum
head9pc
head(pc)
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5,cache=F)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
library(doSNOW)
library(foreach)
#Source model file
source("RunModel.R")
#read data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$ChloroA<-log(mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
mdat$NPP<-log(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP)
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#remove minke whales
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
mxy<-mxy[mxy$Animal %in% c("112699","121207"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
#give it a geospatial layer
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
#no distance to coast,elevation
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
#hold copy of orig
oxy<-mxy
#remake spatial object
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
#Plot
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=4,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
mxy$Month<-factor(mxy$Month,levels=month.name)
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal)),size=.5)  + facet_wrap(~Month) + scale_color_discrete(guide="none")
##Time is the beginning of the first point.
step_length=6
sxy<-split(mxy,mxy$Animal)
#time diff function
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=24) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=6)
#Format matrices for jags
mxy<-rbind_all(sxy)
######recode whales
#mxy$Animal<-as.numeric(as.factor(mxy$Animal))
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$Step<-as.numeric(cut(as.POSIXct(x$timestamp),"6 hours"))
return(x)
})
mxy<-rbind_all(sxy)
#refactor animal
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#Plot
mxy<-mxy %>% arrange(Animal,Track,Step)
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal),group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
names_of_vars<-c("SST","ChloroA","Ocean","Coast","NPP")
cl<-makeCluster(2,"SOCK")
registerDoSNOW(cl)
posteriors<-foreach(x=1:length(names_of_vars),.packages=c("dplyr","reshape2","R2jags","stringr")) %dopar% {
runModel(names_of_vars[[x]],mxy)
}
stopCluster(cl)
#Name by variable
names(posteriors)<-names_of_vars
pc<-melt(posteriors,id.vars=colnames(posteriors[[1]]))
pc$L1<-as.factor(pc$L1)
levels(pc$L1)<-names_of_vars
source('~/.active-rstudio-document', echo=TRUE)
head(psum)
sig
sig<-psum %>% group_by(L1,par) %>% summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1) %>% filter(Significant==TRUE)
sig
sig<-psum %>% group_by(L1,par) %>% summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1) %>% filter(Significant==TRUE) %>% as.data.frame()
sig
psum
psum<-pc %>% group_by(L1,parameter,par)%>% filter(parameter %in% c("beta_mu","beta"))  %>%  summarize(mean=round(mean(value),3),lower=round(quantile(value,0.05),3),upper=round(quantile(value,0.95),3))
psum
sig
head(psum)
head(pc)
psum<-pc %>% group_by(L1,parameter,par)%>% filter(parameter %in% c("beta_mu","beta"),Behavior==1)  %>%  summarize(mean=round(mean(value),3),lower=round(quantile(value,0.05),3),upper=round(quantile(value,0.95),3))
psum
sig<-psum %>% group_by(L1,par) %>%  %>% summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1) %>% filter(Significant==TRUE) %>% as.data.frame()
sig<-psum %>% group_by(L1,par) %>%summarize(Significant=!findInterval(0,sort(c(lower,upper)))==1) %>% filter(Significant==TRUE) %>% as.data.frame()
sig
ggplot(monthall) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower,col=Month)) + theme_bw() + labs(col="Transition",x="Ocean Depth (km)",y="Probability of Switching to Foraging to Traveling",fill="Transition") + facet_grid(Month~L1,scales="free")
ggplot(monthall) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower,fill=Month),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability of foraging when traveling",fill="Transition") + facet_grid(Month~L1,scales="free")
distc<-raster("InputData/DistancetoCoast.tif")
distc
ice
ice<-raster("InputData/ETOPO1_Ice_g_geotiff.tif")
ice
chl<-list.files("InputData/",pattern="CHL",full.names=T)
chlr<-stack(chl)
chlr
chl<-list.files("InputData/",pattern="SST",full.names=T)
sst<-list.files("InputData/",pattern="SST",full.names=T)
sst<-stack(sst)
sst
list.files("InputData/",pattern="SST",full.names=T)
sn<-str_match(sst,"sst-(\\d{4})(\\d{2})")[,2:3]
sst<-list.files("InputData/",pattern="SST",full.names=T)
sst<-stack(sst)
sn<-str_match(sst,"sst-(\\d{4})(\\d{2})")[,2:3]
sst<-list.files("InputData/",pattern="SST",full.names=T)
sstr<-stack(sst)
sn<-str_match(sst,"sst-(\\d{4})(\\d{2})")[,2:3]
sn
sst<-list.files("InputData/",pattern="SST",full.names=T)
sstr<-stack(sst)
sn<-str_match(sst,"sst-(\\d{4})(\\d{2})")[,2:3]
names(chlr)<-paste(sn[,1],sn[,2],sep="_")
plot(sstr,addfun=function(){map(add=T)})
names(sstr)<-paste(sn[,1],sn[,2],sep="_")
plot(sstr,addfun=function(){map(add=T)})
library(maps)
plot(sstr,addfun=function(){map(add=T)})
plot(sstr,addfun=function(){map(add=T)})
plot(sstr,addfun=function(){map(add=T)})
d<-drawExtent()
plot(sstr,ext=d,addfun=function(){map(add=T)})
?plot
zoom(sstr,ext=d,addfun=function(){map(add=T)})
extent(c(-75,-50,-70,-55))
zoom(sstr,ext=extent(c(-73,-60,-70,-65)),addfun=function(){map(add=T)})
plot(sstr,ext=extent(c(-73,-60,-70,-65)),addfun=function(){map(add=T)})
plot(sstr,ext=extent(c(-72,-58,-70,-62)),addfun=function(){map(add=T)})
?foreach
