\alpha_{i,2,1} & 1-\alpha_{i,2,1} \\
\end{matrix}
$$
##Environment
Behavioral states are a function of local environmental conditions. The first environmental condition is ocean depth. I then build a function for preferential foraging in shallow waters.
It generally follows the form, conditional on behavior at t -1:
$$Behavior_t \sim Multinomial([\phi_{traveling},\phi_{foraging}])$$
With the probability of switching states:
$$logit(\phi_{traveling}) = \alpha_{Behavior_{t-1}} + \beta_{Month,1} * Ocean_{y[t,]} + \beta_{Month,2} * Coast_{y[t,]}$$
$$logit(\phi_{foraging}) = \alpha_{Behavior_{t-1}} $$
Following Bestley in preferring to describe the switch into feeding, but no estimating the resumption of traveling.
The effect of the environment is temporally variable such that
$$ \beta_{Month,2} \sim ~ Normal(\beta_{\mu},\beta_\tau)$$
```{r,fig.height=3,fig.width=3.5}
dplot<-function(a1,beta=c(0,0),beta2=c(0,0),x=0,coast=0){
#Transition from traveling to traveling
y<-inv.logit(a1[1]+beta[1]*x + beta2[1]*coast)
d11<-data.frame(x,coast,y,State="Traveling",Begin="Traveling")
#transition from Traveling to Foraging
y<-1-inv.logit(a1[1]+beta[1]*x+ beta2[1]*coast)
d12<-data.frame(x,coast,y,State="Foraging",Begin="Traveling")
y<-inv.logit(a1[2]+beta[2]*x+ beta2[2]*coast)
d21<-data.frame(x,coast,y,State="Traveling",Begin="Foraging")
y<-1-inv.logit(a1[2]+beta[2]*x+ beta2[2]*coast)
d22<-data.frame(x,coast,y,State="Foraging",Begin="Foraging")
d<-rbind_all(list(d11,d12,d21,d22))
return(d)
}
```
##Continious tracks
The transmitter will often go dark for 10 to 12 hours, due to weather, right in the middle of an otherwise good track. The model requires regular intervals to estimate the turning angles and temporal autocorrelation. As a track hits one of these walls, call it the end of a track, and begin a new track once the weather improves. We can remove any micro-tracks that are less than three days.
Specify a duration, calculate the number of tracks and the number of removed points. Iteratively.
```{r}
##Time is the beginning of the first point.
step_length=6
sxy<-split(mxy,mxy$Animal)
#time diff function
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=24) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=6)
#Format matrices for jags
mxy<-rbind_all(sxy)
######recode whales
#mxy$Animal<-as.numeric(as.factor(mxy$Animal))
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$Step<-as.numeric(cut(as.POSIXct(x$timestamp),"6 hours"))
return(x)
})
mxy<-rbind_all(sxy)
#refactor animal
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
```
```{r}
#total number of steps per track/animal
steps_all<-mxy %>% group_by(Animal,Track) %>% summarize(n=length(unique(Step)))
# give each step a label
mxy<-mxy %>% group_by(Animal,Track,Step) %>% mutate(jStep=1:n())
#Cast time array
j<-acast(mxy,Animal~Track~Step~jStep,value.var="j")
#how many observations per individual in each Step
mxy$Step<-factor(mxy$Step,levels=1:max(steps_all$n))
idx<-melt(table(mxy$Animal,mxy$Track,mxy$Step))
colnames(idx)<-c("Animal","Track","Step","jStep")
idx<-acast(data=idx,Animal~Track~Step)
#make ocean a matrix -> MEAN VALUE -> will this yield a jags error on empty cells?
oc<-acast(mxy,Animal~Track~Step,value.var="ocean",fun.aggregate = mean)
#make coast a matrix -> MEAN VALUE
coast<-acast(mxy,Animal~Track~Step,value.var="coast",fun.aggregate = mean)
#month array
mxy$MonthF<-as.numeric(factor(mxy$Month,levels=month.name))
MonthA<-acast(mxy,Animal~Track~Step,value.var="MonthF",fun.aggregate = min)
MonthA[!is.finite(MonthA)]<-NA
#Individuals
ind=length(unique(mxy$Animal))
#tracks per indivudal
tracks<-mxy %>% group_by(Animal) %>% summarize(tracks=length(unique(Track))) %>% .$tracks
#steps per track
steps<-acast(steps_all,Animal~Track,value.var="n")
#obs array
obs<-melt(mxy,measure.vars=c("x","y"))
obs<-acast(obs,Animal~Track~Step~jStep~variable)
```
How did the filter change the extent of tracks?
```{r}
#Plot
mxy<-mxy %>% arrange(Animal,Track,Step,jStep)
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal),group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
```
```{r,fig.height=15}
ggplot() +  geom_path(data=oxy,col='blue',aes(x=x,y=y)) +  geom_path(data=mxy,col='red',aes(x=x,y=y),size=2,alpha=0.7)  + facet_wrap(~individual.local.identifier,scales="free",ncol=4)
```
```{r,fig.height=3,fig.width=5}
ggplot(data=steps_all,aes(x=n*step_length/24)) + geom_histogram() + labs(x="Days") + ggtitle("Track Length")
ggplot(data=steps_all,aes(x=Track)) + geom_histogram() + labs(x="Subtracks per Animal")
```
moved<-move(x=mxy$x,y=mxy$y,time=as.POSIXct(mxy$timestamp),proj=CRS("+proj=longlat +ellps=WGS84"),animal=mxy$Animal,data=as.data.frame(mxy),sensor=mxy$Animal,removeDuplicatedTimestamps=T)
2000/10
2000/112
2000/12
2000/11
2000/15
2000/14
2000/13
2000/20
load("DataExploration.RData")
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5,cache=F)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
library(doSNOW)
library(foreach)
#Source model file
source("RunModel.R")
ggplot(plotall) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition") + facet_wrap(~L1,scales="free")
head(plotall)
plotall %>% group_by(L1) %>% summarize(min=quantile(x,0),max=quantile(x,0.75))
plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
ggplot(plotall) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition") + facet_wrap(~L1,scales="free") + scale_x_continuous(limits=c(min,max))
x=1
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x]]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x]))
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x]))
p<-list()
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x]))
p[[1]]
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
p
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
p<-list()
for (x in 1:length(posteriors)){
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
}
p
limits$min
limits$max[x]
p[[1]]
p[[2]]
p[[3]]
p[[4]]
limits
names(posteriors)
limits %>% slice(match(L1,names(posteriors)))
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
limits<-limits %>% slice(match(L1,names(posteriors)))
p<-list()
for (x in 1:length(posteriors)){
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
}
p
limits
names(posteriors)
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
limits<-limits %>% slice(match(L1,rev(names(posteriors))))
p<-list()
for (x in 1:length(posteriors)){
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
}
p
p[[1]]
p[[2]]
limits
names(posteriors)
rev(names(posteriors))
limits
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
limits<-limits %>% slice(match(L1,rev(names(posteriors))))
limits
limits<-limits %>% mutate(L1=factor(L1,levels=names(posteriors))) %>% arrange(L1)
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
limits<-limits %>% mutate(L1=factor(L1,levels=names(posteriors))) %>% arrange(L1)
limits
limits<-plotall %>% group_by(L1) %>% summarize(min=quantile(x,0,na.rm=T),max=quantile(x,0.75,na.rm=T))
limits<-limits %>% mutate(L1=factor(L1,levels=names(posteriors))) %>% arrange(L1)
p<-list()
for (x in 1:length(posteriors)){
p[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_line(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
}
p
pribbon<-list()
for (x in 1:length(posteriors)){
pribbon[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_riboon(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
}
pribbon
pribbon<-list()
for (x in 1:length(posteriors)){
pribbon[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
}
pribbon
psum
psum %>% filter(L1 == "WaveH")
names(posteriors)
x=5
pribbon[[x]]<-ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(limits$min[x],limits$max[x])) + ggtitle(names(posteriors)[x])
ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(0,1)) + ggtitle(names(posteriors)[x])
ggplot(plotall[plotall$L1 %in% names(posteriors)[x],]) + geom_ribbon(aes(x=x,y=mean,ymin=upper,ymax=lower),alpha=0.5) + theme_bw() + labs(col="Transition",y="Probability",fill="Transition")  + scale_x_continuous(limits=c(0,10)) + ggtitle(names(posteriors)[x])
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5,cache=F)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
library(doSNOW)
library(foreach)
#Source model file
source("RunModel.R")
mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP
cor(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP,mdat$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A)
cor(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP,mdat$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A,use="complete.obs")
cor(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP,mdat$ECMWF.Interim.Full.Daily.SFC.Mean.Wave.Direction.A,use="complete.obs")
cor(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP,mdat$ocean,use="complete.obs")
cor(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP,mdat$coast,use="complete.obs")
cor(mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP,mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A,use="complete.obs")
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=OSU.Ocean.NPP.0.17deg.Monthly.NPP),size=.5)  + scale_color_continuous(low='blue',high='red')
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=OSU.Ocean.NPP.0.17deg.Monthly.NPP),size=.5)  + scale_color_continuous(low='blue',high='red') + facet_wrap(~Month)
r<-raster("InputData/ETOPO1_Ice_g_geotiff-20150101000000000-0-0.tif")
plot(r)
r
r<-raster("InputData/dist2coast-2015.tif")
plot(r)
mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
r
load("SingleSpecies.RData")
table(pc$par)
source('~/.active-rstudio-document', echo=TRUE)
rpois(3.3)
rpois(1,3.3)
source('~/Whales/RunModel.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=paste("NPP"),group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5)  + theme_inset()
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continious(low="blue",high="red")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
library(knitr)
opts_chunk$set(echo=F,warning=F,message=F,fig.width = 11,fig.height = 5,cache=F)
library(boot)
library(raster)
library(reshape2)
library(ggplot2)
library(survival)
library(MASS)
library(ggmap)
library(dplyr)
library(chron)
library(gridExtra)
library(stringr)
library(R2jags)
library(move)
library(doSNOW)
library(foreach)
#Source model file
source("RunModel.R")
#read data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$NPP<-mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#remove minke whales
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
#give it a geospatial layer
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
#no distance to coast,elevation
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
##Time is the beginning of the first point.
step_length=6
sxy<-split(mxy,mxy$Animal)
#time diff function
timed<-function(d,step_length){
d$j[1]<-0
for (x in 2:nrow(d)){
d$j[x]<-as.numeric(difftime(as.POSIXct(d$timestamp[x]),as.POSIXct(d$timestamp[x-1]),units="mins"))/(step_length*60)
}
#Split out track endings
ends<-c(1,which(d$j>1),nrow(d))
for(w in 2:length(ends)){
d[ends[w-1]:ends[w],"Track"]<-w-1
}
#remove tracks that are shorter than three days
track_time<-d %>% group_by(Track) %>% summarize(mt=difftime(max(as.POSIXct(timestamp)),min(as.POSIXct(timestamp)),units="hours")) %>% filter(mt>=24) %>% .$Track
d<-d[d$Track %in% track_time,]
#renumber the tracks
d$Track<-as.numeric(as.factor(d$Track))
return(d)
}
sxy<-lapply(sxy,timed,step_length=6)
#Format matrices for jags
mxy<-rbind_all(sxy)
######recode whales
#mxy$Animal<-as.numeric(as.factor(mxy$Animal))
sxy<-split(mxy,list(mxy$Animal,mxy$Track),drop=TRUE)
sxy<-lapply(sxy,function(x){
#How many observations in each step length segment
x$Step<-as.numeric(cut(as.POSIXct(x$timestamp),"6 hours"))
return(x)
})
mxy<-rbind_all(sxy)
#refactor animal
mxy$Animal<-as.numeric(as.factor(mxy$Animal))
#Plot
mxy<-mxy %>% arrange(Animal,Track,Step)
pp<-c(mean(mxy$x),mean(mxy$y))
m <- get_map(location=pp,source="google",zoom=5,scale=2,maptype="satellite",color = "bw")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=as.factor(Animal),group=paste(Animal,Track)),size=.5) + scale_color_discrete(guide="none") + theme_inset()
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=NPP,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
dim(mxy)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=ocean,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=Ocean,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col="red",group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
head(mxy)
ggmap(m)+geom_path(data=mxy, aes(x=x, y=y,col=ETOPO1.Elevation,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
dim(mxy)
dim(oxy)
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=ETOPO1.Elevation,group=paste(Animal,Track)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=ETOPO1.Elevation,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=NPP,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A
mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
head(mxy$NPP)
sum(mxy$NPP)
sum(is.na(mxy$NPP)))
sum(is.na(mxy$NPP))
sum(is.na(mxy$NPP)/nrow(mxhy))
sum(is.na(mxy$NPP)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(mxy))
sum(is.na(oxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(oxy))
sum(is.na(oxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(oxy))
sum(is.na(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Yearly.Chlorophyll.A)/nrow(mxy))
sum(is.na(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Yearly.Chlorophyll.A)/nrow(mxy))
sum(is.na(oxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(oxy))
sum(is.na(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)/nrow(mxy))
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=MODIS.Ocean.Aqua.OceanColor.4km.Yearly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=oxy, aes(x=x, y=y,col=MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
head(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
rante(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
range(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
range(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,na.rm=T)
quantile(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,na.rm=T)
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A > 1])
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 1])
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 2])
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 5])
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 10])
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A <5])
ggmap(m)+geom_path(data=mxy[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A <5,], aes(x=x, y=y,col=MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A <10,], aes(x=x, y=y,col=MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,group=paste(Animal)),size=.5)  + theme_inset() + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
cor(mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.POC)
cor(mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.POC,mxy$MODIS.Ocean.Aqua.OceanColor.4km.Yearly.POC)
cor(mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.POC,mxy$MODIS.Ocean.Aqua.OceanColor.4km.Yearly.POC,use="complete.obs")
cor(mxy$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Chlorophyll.A,mxy$MODIS.Ocean.Aqua.OceanColor.4km.Yearly.Chlorophyll.A,use="complete.obs")
cor(mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A,mxy$MODIS.Ocean.Aqua.OceanColor.4km.Yearly.Chlorophyll.A,use="complete.obs")
cor(mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A,mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,use="complete.obs")
#read data
mdat<-read.csv("InputData/Antarctic Humpback overlap with krill fisheries -3085052751565071394.csv")
#name env columns
#Create a oceandepth in km
mdat$ocean<-round(mdat$ETOPO1.Elevation * -1 /1000,3)
mdat$coast<-round(mdat$NASA.Distance.to.Coast,1)
mdat$SST<-mdat$MODIS.Ocean.Terra.OceanColor.4km.Yearly.Daytime.SST
mdat$ChloroA<-mdat$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
mdat$WaveH<-mdat$ECMWF.Interim.Full.Daily.SFC.Significant.Wave.Height
mdat$NPP<-mdat$OSU.Ocean.NPP.0.17deg.Monthly.NPP
mdat$Ice<-mdat$ECMWF.Interim.Full.Daily.SFC.Sea.Ice.Cover
#standardize column names to match the simulation
#Create an animal tag.
mxy <- as(mdat, "data.frame")
mxy$Animal<-mxy$individual.local.identifier
mxy$x<-mxy$location.long
mxy$y<-mxy$location.lat
#remove minke whales
minke<-c("131117","131118","131120","154184")
mxy<-mxy[!mxy$individual.local.identifier %in% minke,]
#grab set of animals
#mxy<-mxy[mxy$Animal %in% c("112699","121207"),]
#empty coordinates
mxy<-mxy[!is.na(mxy$x),]
#crop by extent
d<-SpatialPointsDataFrame(cbind(mxy$x,mxy$y),data=mxy,proj4string=CRS("+proj=longlat +datum=WGS84"))
d<-crop(d,y=extent(c(-75,-50,-70,-57.5)))
#give it a geospatial layer
mxy<-as.data.frame(d)
#set datestamp
mxy$timestamp<-as.POSIXct(mxy$timestamp,format="%Y-%m-%d %H:%M:%S.000")
#month and year columns
mxy$Month<-months(mxy$timestamp)
mxy$Year<-years(mxy$timestamp)
#Only austral sping and summer
mxy<-mxy[mxy$Month %in% month.name[1:7],]
#remove empty timestamps
mxy<-mxy[!is.na(mxy$timestamp),]
#remove duplicates
mxy<-mxy[!duplicated(data.frame(mxy$timestamp,mxy$Animal)),]
#no distance to coast,elevation
mxy<-mxy[!mxy$ETOPO1.Elevation>0,]
mxy %>% select("ocean","coast","SST","ChloroA","WaveH","NPP","Ice")
mxy %>% select(ocean,coast,SST,ChloroA,WaveH,NPP,Ice))
mxy %>% select(ocean,coast,SST,ChloroA,WaveH,NPP,Ice)
head(mxy)
tocor<-mxy %>% select(ocean,coast,SST,ChloroA,WaveH,NPP,Ice)
ggpairs
??ggpairs
GGally::ggpairs(tocor)
hist(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
hist(mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A)
ggmap(m)+geom_path(data=mxy, aes_string(x=x, y=y,col="ChloroA"),size=.5)  + facet_wrap(~Month) + scale_color_discrete(guide="none")
ggmap(m)+geom_path(data=mxy,aes(x=x, y=y,col="ChloroA"),size=.5)  + facet_wrap(~Month) + scale_color_discrete(guide="none")
paste("ChloroA")
?eval
eval("ChloroA")
ggmap(m)+geom_path(data=mxy,aes(x=x, y=y,col=ChloroA,size=.5)  + facet_wrap(~Month) + scale_color_discrete(guide="none")
ggmap(m)+geom_path(data=mxy,aes(x=x, y=y,col=ChloroA,size=.5))  + facet_wrap(~Month) + scale_color_discrete(guide="none")
ggmap(m)+geom_path(data=mxy,aes(x=x, y=y,col=ChloroA,size=.5))  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy,aes(x=x, y=y,col=ChloroA,size=.5,group=Animal))  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy[mxy$M],aes(x=x, y=y,col=ChloroA,group=Animal),size=.5)  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy,aes(x=x, y=y,col=ChloroA,group=Animal),size=.5)  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy[mxy$ChloroA>5],aes(x=x, y=y,col=ChloroA,group=Animal),size=.5)  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy[mxy$ChloroA>5,],aes(x=x, y=y,col=ChloroA,group=Animal),size=.5)  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
ggmap(m)+geom_path(data=mxy[mxy$ChloroA<5,],aes(x=x, y=y,col=ChloroA,group=Animal),size=.5)  + facet_wrap(~Month) + scale_color_continuous(low="blue",high="red")
table(mxy$ChloroA<5)
mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
qplot(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A,mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A
)
qplot(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 5],mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A
qplot(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 5],mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 5])
qplot(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 5],mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A[mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A < 5]) + labs(x="Aqua",y="Terra") + ggtitle("Terra versus Aqua Monthly ChloroA")
ggsave("Figures/TerraVAquaChloroA.jpeg",height=4,width=4)
mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A
which.max(mxy$MODIS.Ocean.Aqua.OceanColor.4km.Monthly.Chlorophyll.A)
mxy[39787,]
which.max(mxy$NPP)
mxy[48429,]
qplot(mxy$NPP,mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A) + labs(x="Aqua",y="Terra") + ggtitle("Terra versus Aqua Monthly ChloroA")
qplot(mxy$NPP,mxy$MODIS.Ocean.Terra.OceanColor.4km.Monthly.Chlorophyll.A) + labs(x="NPP",y="ChloroA") + ggtitle("NPP versus Aqua Monthly ChloroA")
ggsave("Figures/NPP_ChloroA.jpeg",height=4,width = 4)
